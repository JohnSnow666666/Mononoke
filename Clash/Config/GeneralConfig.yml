# Clash Config Make by Coldvvater
# TG Channel: https://t.me/Coldvvater_Channel
# GitHub: https://github.com/Coldvvater
# Update Date: 2024.06.16

port: 7890                           # HTTP(S) 代理服务器端口
socks-port: 7891                     # SOCKS5 代理端口
mixed-port: 7892                     # 混合端口，HTTP和SOCKS5用一个端口
redir-port: 7893                     # 透明代理端口，用于 Linux 和 MacOS
tproxy-port: 7894                    # Transparent proxy server port for Linux (TProxy TCP and TProxy UDP)
# mixed-port: 7890
# tproxy-port: 7891

mode: rule                           # 规则模式：rule（规则） / global（全局代理）/ direct（全局直连）/ script (脚本)
log-level: info                      # 设置日志输出级别 (5 个级别：silent / error / warning / info / debug）
allow-lan: true                      # 允许局域网的连接（共享代理）
bind-address: "*"                    # 监听IP白名单，可绑定单个IPv4和v6地址，"*" 为绑定所有IP地址，仅在将allow-lan设置为true时适用
ipv6: true                           # 开启 IPv6 总开关，关闭阻断所有 IPv6 链接和屏蔽 DNS 请求 AAAA 记录
udp: true                            # 是否允许 UDP 通过代理，默认为 false

unified-delay: true                  # 开启统一延迟时，会进行两次延迟测试，以消除连接握手等带来的不同类型节点的延迟差异，可选值 true/false
tcp-concurrent: true                 # TCP 并发，可选值 true/false
find-process-mode: strict            # 控制是否让 Clash 去匹配进程，always 开启，强制匹配所有进程，strict 默认，由 Clash 判断是否开启，off 不匹配进程，推荐在路由器上使用此模式
global-client-fingerprint: chrome    # 全局 TLS 指纹，优先低于 proxy 内的 client-fingerprint，目前支持开启 TLS 传输的 TCP/grpc/WS/HTTP , 支持协议有 VLESS,Vmess 和 trojan

external-controller: 127.0.0.1:9090  # 外部控制器，可以使用 RESTful API 来控制你的 Clash 内核，API 监听地址，你可以将 127.0.0.1 修改为 0.0.0.0 来监听所有 IP
external-ui: ui                      # 可以将静态网页资源 (比如 Clash-dashboard) 运行在 Clash API, 路径为 API 地址/ui，可以为绝对路径，或者 Clash 工作目录的相对路径
external-ui-url: 'https://mirror.ghproxy.com/https://github.com/MetaCubeX/Yacd-meta/archive/gh-pages.zip'
                                     # 自定义外部用户界面下载地址

secret: ""                           # 自定义 API 的访问密钥

geodata-mode: true                   # 更改 geoip 使用文件，mmdb 或者 dat，可选 true/false,true为 dat，此项有默认值 false
geodata-loader: memconservative      # GEO 文件加载模式，standard：标准加载器 memconservative：专为内存受限 (小内存) 设备优化的加载器 (默认值)
geo-auto-update: true                # 自动更新 GEO
geo-update-interval: 24              # 更新间隔，单位为小时
geox-url:
  geoip: 'https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.dat'
  geosite: 'https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.dat'
  mmdb: 'https://testingcf.jsdelivr.net/gh/soffchen/GeoIP2-CN@release/Country.mmdb'
  asn: 'https://mirror.ghproxy.com/https://github.com/xishang0128/geoip/releases/download/latest/GeoLite2-ASN.mmdb'
                                     # 自定义 GEO 下载地址

profile:
  store-selected: true               # 储存 API 对策略组的选择，以供下次启动时使用
  store-fake-ip: true                # 储存 fakeip 映射表，域名再次发生连接时，使用原有映射地址

sniffer:
  enable: true                       # 是否启用sniffer
  force-dns-mapping: true            # 对 redir-host 类型识别的流量进行强制嗅探
  parse-pure-ip: true                # 对所有未获取到域名的流量进行强制嗅探
  override-destination: true         # 是否使用嗅探结果作为实际访问，默认为 true

  sniff:
    HTTP:
      ports: [80, 8080-8880]         # ports字段，表示端口范围。示例：ports: [80, 8080-8880]
      override-destination: true     # override-destination字段（可选），用于覆盖全局override-destination设置
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:                      # 需要强制嗅探的域名（默认情况下只对IP进行嗅探）
    - +.v2ex.com
  skip-domain:                       # 需要跳过嗅探的域名。主要解决部分站点sni字段非域名，导致嗅探结果异常的问题，如米家设备Mijia Cloud
    - Mijia Cloud

tun:
  enable: true                       # 启用 tun
  stack: system                      # tun 模式堆栈,可用值：system/gvisor/mixed
  dns-hijack:                        # dns 劫持，将匹配到的连接导入内部 dns 模块，不书写协议则为 udp://
    - any:53
  auto-route: true                   # 自动设置全局路由，可以自动将全局流量路由进入 tun 网卡
  auto-detect-interface: true        # 自动选择流量出口接口，多出口网卡同时连接的设备建议手动指定出口网卡

dns:
  enable: true                       # 关闭将使用系统 DNS
  listen: 0.0.0.0:1053               # DNS 监听地址
  ipv6: true                         # IPV6解析开关；如果为false，将返回ipv6结果为空
  enhanced-mode: fake-ip             # 模式：redir-host或fake-ip
  default-nameserver: [223.5.5.5, 119.29.29.29]
                                     # 解析非IP的dns用的dns服务器，只支持纯IP
  nameserver: [https://223.5.5.5/dns-query, https://120.53.53.53/dns-query]
                                     # 默认DNS服务器，支持udp/tcp/dot/doh/doq
  fake-ip-range: 28.0.0.1/8          # Fake-IP 解析地址池
  fake-ip-filter: ['*.lan', 'cable.auth.com', '*.msftconnecttest.com', '*.msftncsi.com', 'network-test.debian.org', 'detectportal.firefox.com', 'resolver1.opendns.com', '*.srv.nintendo.net', '*.stun.playstation.net', 'xbox.*.microsoft.com', '*.xboxlive.com', 'stun.*', 'global.turn.twilio.com', 'global.stun.twilio.com', 'localhost.*.qq.com', 'localhost.*.weixin.qq.com', '*.logon.battlenet.com.cn', '*.logon.battle.net', '*.blzstatic.cn', 'music.163.com', '*.music.163.com', '*.126.net', 'musicapi.taihe.com', 'music.taihe.com', 'songsearch.kugou.com', 'trackercdn.kugou.com', '*.kuwo.cn', 'api-jooxtt.sanook.com', 'api.joox.com', 'joox.com', 'y.qq.com', '*.y.qq.com', 'streamoc.music.tc.qq.com', 'mobileoc.music.tc.qq.com', 'isure.stream.qqmusic.qq.com', 'dl.stream.qqmusic.qq.com', 'aqqmusic.tc.qq.com', 'amobile.music.tc.qq.com', '*.xiami.com', '*.music.migu.cn', 'music.migu.cn', 'proxy.golang.org', '*.mcdn.bilivideo.cn', '*.cmpassport.com', 'id6.me', 'open.e.189.cn', 'mdn.open.wo.cn', 'opencloud.wostore.cn', 'auth.wosms.cn', '*.jegotrip.com.cn', '*.icitymobile.mobi', '*.pingan.com.cn', '*.cmbchina.com', 'pool.ntp.org', '*.pool.ntp.org', 'ntp.*.com', 'time.*.com', 'ntp?.*.com', 'time?.*.com', 'time.*.gov', 'time.*.edu.cn', '*.ntp.org.cn', 'PDC._msDCS.*.*', 'DC._msDCS.*.*', 'GC._msDCS.*.*']
                                     # Fake-ip 过滤，列表中的域名返回真实IP

